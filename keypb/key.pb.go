// This file defines a storage format for an encrypted key file.  A key file is
// symmetrically encrypted based on a passphrase.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: key.proto

package keypb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Keyfile is the storage format for a key file. The keys in a file are
// encrypted with AES-256 using a key derived from a passphrase using scrypt.
type Keyfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Keyfile_Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"` // encrypted keys
}

func (x *Keyfile) Reset() {
	*x = Keyfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_key_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keyfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keyfile) ProtoMessage() {}

func (x *Keyfile) ProtoReflect() protoreflect.Message {
	mi := &file_key_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keyfile.ProtoReflect.Descriptor instead.
func (*Keyfile) Descriptor() ([]byte, []int) {
	return file_key_proto_rawDescGZIP(), []int{0}
}

func (x *Keyfile) GetKeys() []*Keyfile_Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

// A Key is stored as an array of bytes that has been encrypted in CTR
// mode. Each key has a slug that can be used to choose which key to decrypt.
// Since key secrets are expected to be both short and random, they are not
// compressed before storage.
type Keyfile_Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"` // descriptive slug for this key (non-secret)
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // encrypted secret (see below)
	Init []byte `protobuf:"bytes,3,opt,name=init,proto3" json:"init,omitempty"` // initialization vector
	Salt []byte `protobuf:"bytes,4,opt,name=salt,proto3" json:"salt,omitempty"` // key generation salt
}

func (x *Keyfile_Key) Reset() {
	*x = Keyfile_Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_key_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keyfile_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keyfile_Key) ProtoMessage() {}

func (x *Keyfile_Key) ProtoReflect() protoreflect.Message {
	mi := &file_key_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keyfile_Key.ProtoReflect.Descriptor instead.
func (*Keyfile_Key) Descriptor() ([]byte, []int) {
	return file_key_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Keyfile_Key) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Keyfile_Key) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Keyfile_Key) GetInit() []byte {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *Keyfile_Key) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

var File_key_proto protoreflect.FileDescriptor

var file_key_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6b, 0x65, 0x79,
	0x70, 0x62, 0x22, 0x88, 0x01, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6b,
	0x65, 0x79, 0x70, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4b, 0x65, 0x79,
	0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x1a, 0x55, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_key_proto_rawDescOnce sync.Once
	file_key_proto_rawDescData = file_key_proto_rawDesc
)

func file_key_proto_rawDescGZIP() []byte {
	file_key_proto_rawDescOnce.Do(func() {
		file_key_proto_rawDescData = protoimpl.X.CompressGZIP(file_key_proto_rawDescData)
	})
	return file_key_proto_rawDescData
}

var file_key_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_key_proto_goTypes = []interface{}{
	(*Keyfile)(nil),     // 0: keypb.Keyfile
	(*Keyfile_Key)(nil), // 1: keypb.Keyfile.Key
}
var file_key_proto_depIdxs = []int32{
	1, // 0: keypb.Keyfile.keys:type_name -> keypb.Keyfile.Key
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_key_proto_init() }
func file_key_proto_init() {
	if File_key_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_key_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keyfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_key_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keyfile_Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_key_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_key_proto_goTypes,
		DependencyIndexes: file_key_proto_depIdxs,
		MessageInfos:      file_key_proto_msgTypes,
	}.Build()
	File_key_proto = out.File
	file_key_proto_rawDesc = nil
	file_key_proto_goTypes = nil
	file_key_proto_depIdxs = nil
}
