// Code generated by protoc-gen-go. DO NOT EDIT.
// source: key.proto

package keypb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Keyfile is the storage format for a key file. The keys in a file are
// encrypted with AES-256 using a key derived from a passphrase using scrypt.
type Keyfile struct {
	Keys                 []*Keyfile_Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Keyfile) Reset()         { *m = Keyfile{} }
func (m *Keyfile) String() string { return proto.CompactTextString(m) }
func (*Keyfile) ProtoMessage()    {}
func (*Keyfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_2accf5df6005b7d4, []int{0}
}

func (m *Keyfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyfile.Unmarshal(m, b)
}
func (m *Keyfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyfile.Marshal(b, m, deterministic)
}
func (m *Keyfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyfile.Merge(m, src)
}
func (m *Keyfile) XXX_Size() int {
	return xxx_messageInfo_Keyfile.Size(m)
}
func (m *Keyfile) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyfile.DiscardUnknown(m)
}

var xxx_messageInfo_Keyfile proto.InternalMessageInfo

func (m *Keyfile) GetKeys() []*Keyfile_Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

// A Key is stored as a wire-format Secret which has been encrypted in CTR
// mode. Each key has a slug that can be used to choose which key to decrypt.
// Since key secrets are expected to be both short and random, they are not
// compressed before storage.
type Keyfile_Key struct {
	Slug                 string   `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Init                 []byte   `protobuf:"bytes,3,opt,name=init,proto3" json:"init,omitempty"`
	Salt                 []byte   `protobuf:"bytes,4,opt,name=salt,proto3" json:"salt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Keyfile_Key) Reset()         { *m = Keyfile_Key{} }
func (m *Keyfile_Key) String() string { return proto.CompactTextString(m) }
func (*Keyfile_Key) ProtoMessage()    {}
func (*Keyfile_Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_2accf5df6005b7d4, []int{0, 0}
}

func (m *Keyfile_Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyfile_Key.Unmarshal(m, b)
}
func (m *Keyfile_Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyfile_Key.Marshal(b, m, deterministic)
}
func (m *Keyfile_Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyfile_Key.Merge(m, src)
}
func (m *Keyfile_Key) XXX_Size() int {
	return xxx_messageInfo_Keyfile_Key.Size(m)
}
func (m *Keyfile_Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyfile_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Keyfile_Key proto.InternalMessageInfo

func (m *Keyfile_Key) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Keyfile_Key) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Keyfile_Key) GetInit() []byte {
	if m != nil {
		return m.Init
	}
	return nil
}

func (m *Keyfile_Key) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

type Keyfile_Secret struct {
	Secret               []byte   `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	Check                uint32   `protobuf:"varint,2,opt,name=check,proto3" json:"check,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Keyfile_Secret) Reset()         { *m = Keyfile_Secret{} }
func (m *Keyfile_Secret) String() string { return proto.CompactTextString(m) }
func (*Keyfile_Secret) ProtoMessage()    {}
func (*Keyfile_Secret) Descriptor() ([]byte, []int) {
	return fileDescriptor_2accf5df6005b7d4, []int{0, 1}
}

func (m *Keyfile_Secret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyfile_Secret.Unmarshal(m, b)
}
func (m *Keyfile_Secret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyfile_Secret.Marshal(b, m, deterministic)
}
func (m *Keyfile_Secret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyfile_Secret.Merge(m, src)
}
func (m *Keyfile_Secret) XXX_Size() int {
	return xxx_messageInfo_Keyfile_Secret.Size(m)
}
func (m *Keyfile_Secret) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyfile_Secret.DiscardUnknown(m)
}

var xxx_messageInfo_Keyfile_Secret proto.InternalMessageInfo

func (m *Keyfile_Secret) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *Keyfile_Secret) GetCheck() uint32 {
	if m != nil {
		return m.Check
	}
	return 0
}

func init() {
	proto.RegisterType((*Keyfile)(nil), "keypb.Keyfile")
	proto.RegisterType((*Keyfile_Key)(nil), "keypb.Keyfile.Key")
	proto.RegisterType((*Keyfile_Secret)(nil), "keypb.Keyfile.Secret")
}

func init() { proto.RegisterFile("key.proto", fileDescriptor_2accf5df6005b7d4) }

var fileDescriptor_2accf5df6005b7d4 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8f, 0x4d, 0xae, 0x82, 0x30,
	0x14, 0x85, 0xd3, 0xc7, 0xcf, 0x0b, 0x57, 0x9c, 0xdc, 0x18, 0xd3, 0x30, 0x22, 0x0e, 0x0c, 0x23,
	0x06, 0x9a, 0xb8, 0x09, 0x66, 0x35, 0x2e, 0x00, 0xf0, 0xaa, 0xa4, 0x44, 0x08, 0xad, 0x83, 0xee,
	0xce, 0xa5, 0x99, 0xde, 0x32, 0xea, 0x77, 0xbe, 0xd3, 0x9e, 0xa4, 0x90, 0x69, 0x72, 0xf5, 0xbc,
	0x4c, 0x76, 0xc2, 0x44, 0x93, 0x9b, 0xbb, 0xc3, 0x57, 0xc0, 0x7f, 0x43, 0xee, 0x31, 0x8c, 0x84,
	0x47, 0x88, 0x35, 0x39, 0x23, 0x45, 0x19, 0x55, 0x9b, 0x13, 0xd6, 0x7c, 0xa3, 0x5e, 0x5b, 0x7f,
	0x2a, 0xee, 0x8b, 0x1b, 0x44, 0x0d, 0x39, 0x44, 0x88, 0xcd, 0xf8, 0x79, 0x4a, 0x51, 0x8a, 0x2a,
	0x53, 0xcc, 0xde, 0xdd, 0x5b, 0xdb, 0xca, 0xbf, 0x52, 0x54, 0xb9, 0x62, 0xf6, 0x6e, 0x78, 0x0f,
	0x56, 0x46, 0xc1, 0x79, 0xe6, 0xb7, 0xed, 0x68, 0x65, 0x1c, 0x9c, 0xe7, 0xe2, 0x02, 0xe9, 0x95,
	0xfa, 0x85, 0x2c, 0xee, 0x21, 0x35, 0x4c, 0xbc, 0x9d, 0xab, 0x35, 0xe1, 0x0e, 0x92, 0xfe, 0x45,
	0xbd, 0xe6, 0xf9, 0xad, 0x0a, 0xa1, 0x4b, 0xf9, 0x43, 0xe7, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x09, 0x85, 0x9a, 0xe8, 0xdd, 0x00, 0x00, 0x00,
}
